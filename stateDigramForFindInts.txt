0 ---> Outside and unwilling to start a new integer
1 ---> Outside and willing to start a new integer
2 ---> currently inside a potential integer.

State 0:

  . or digit => Stay in state 0
  anything else => change to state 1

State 1:
  
  .  => change to state 0
  digit => change to state 2 (also store the digit read)
  anything else =>  stay in state 1

State 2:

  digit => stay in state 2, store.
  other than . or digit => report this integer and change to state 1
  .  => peep in to the next character (if it exists) 
        if next char is digit => throw current value away and go to State 0
        else => report this integer and change state to 0 (1 would also work)


